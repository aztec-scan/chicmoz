apiVersion: skaffold/v4beta6
kind: Config
metadata:
  name: chicmoz-prod
build:
  artifacts:
    - image: registry.digitalocean.com/aztlan-containers/chicmoz-base
      context: .
      docker:
        dockerfile: Dockerfile
    - image: registry.digitalocean.com/aztlan-containers/explorer-ui
      context: services/explorer-ui
      docker:
        dockerfile: Dockerfile
        buildArgs:
          NODE_ENV: "development"
          VITE_API_URL: "http://explorer-api.localhost:80/v1/d1e2083a-660c-4314-a6f2-1d42f4b944f4"
      requires:
        - image: registry.digitalocean.com/aztlan-containers/chicmoz-base
          alias: BASE
    - image: registry.digitalocean.com/aztlan-containers/auth
      context: services/auth
      docker:
        dockerfile: Dockerfile
      requires:
        - image: registry.digitalocean.com/aztlan-containers/chicmoz-base
          alias: BASE
    - image: registry.digitalocean.com/aztlan-containers/aztec-listener
      context: services/aztec-listener
      docker:
        dockerfile: Dockerfile
      requires:
        - image: registry.digitalocean.com/aztlan-containers/chicmoz-base
          alias: BASE
    - image: registry.digitalocean.com/aztlan-containers/explorer-api
      context: services/explorer-api
      docker:
        dockerfile: Dockerfile
      requires:
        - image: registry.digitalocean.com/aztlan-containers/chicmoz-base
          alias: BASE
manifests:
  rawYaml:
    - k8s/local/common/namespace.yaml
    - k8s/local/explorer-ui/ingress.yaml
    - k8s/local/explorer-ui/deployment.yaml
    - k8s/local/explorer-ui/service.yaml
    - k8s/local/explorer-api/ingress.yaml
    - k8s/local/explorer-api/deployment.yaml
    - k8s/local/explorer-api/service.yaml
    - k8s/local/auth/deployment.yaml
    - k8s/local/auth/service.yaml
    - k8s/local/aztec-listener/deployment.yaml
    - k8s/local/aztec-listener/service.yaml
    - k8s/local/kafka-ui/configmap.yaml
    - k8s/local/kafka-ui/configmap-env.yaml
    - k8s/local/kafka-ui/ingress.yaml
  helm:
    releases:
      - name: ingress-nginx
        remoteChart: ingress-nginx
        repo: https://kubernetes.github.io/ingress-nginx
        namespace: chicmoz
        createNamespace: false
        recreatePods: false
        skipBuildDependencies: false
        useHelmSecrets: false
        wait: false
      - name: postgresql
        version: 12.10.0
        remoteChart: postgresql
        repo: https://charts.bitnami.com/bitnami
        valuesFiles:
          - k8s/local/postgres/values.yaml
        setValues:
          global.postgresql.auth.postgresPassword: "secret-local-password" # TODO: change to env-var
          global.postgresql.auth.username: "admin"
          global.postgresql.auth.password: "secret-local-password" # TODO: change to env-var
          image.debug: true
        namespace: chicmoz
        createNamespace: false
        recreatePods: false
        skipBuildDependencies: false
        useHelmSecrets: false
        wait: false
      - name: redis
        version: 18.17.1
        remoteChart: redis
        repo: https://charts.bitnami.com/bitnami
        namespace: chicmoz
        createNamespace: false
        recreatePods: false
        skipBuildDependencies: false
        useHelmSecrets: false
        wait: false
        setValues:
          auth.enabled: false
      - name: kafka
        version: 26.4.2
        remoteChart: kafka
        repo: https://charts.bitnami.com/bitnami
        namespace: chicmoz
        setValues:
          sasl.enabledMechanisms: plain
          sasl.controllerMechanism: plain
          sasl.interBrokerMechanism: plain
          sasl.controller.user: controller_user
          sasl.controller.password: test
          sasl.interbroker.user: inter_broker_user
          sasl.interbroker.password: test
          sasl.client.users:
            - controller_user
          sasl.client.passwords:
            - test
          extraConfig: |
            message.max.bytes=10000000
        createNamespace: false
        recreatePods: true
        skipBuildDependencies: false
        useHelmSecrets: false
        wait: false
