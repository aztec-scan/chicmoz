apiVersion: skaffold/v4beta6
kind: Config
metadata:
  name: chicmoz-prod
build:
  artifacts:
    - image: registry.digitalocean.com/aztlan-containers/chicmoz-base
      context: .
      docker:
        dockerfile: Dockerfile
    - image: registry.digitalocean.com/aztlan-containers/explorer-ui
      context: services/explorer-ui
      docker:
        dockerfile: Dockerfile
        buildArgs:
          NODE_ENV: "production"
          VITE_API_URL: "https://api.chicmoz.info:80/v1/d1e2083a-660c-4314-a6f2-1d42f4b944f4" # TODO: change the api key
      requires:
        - image: registry.digitalocean.com/aztlan-containers/chicmoz-base
          alias: BASE
    - image: registry.digitalocean.com/aztlan-containers/auth
      context: services/auth
      docker:
        dockerfile: Dockerfile
      requires:
        - image: registry.digitalocean.com/aztlan-containers/chicmoz-base
          alias: BASE
    - image: registry.digitalocean.com/aztlan-containers/aztec-listener
      context: services/aztec-listener
      docker:
        dockerfile: Dockerfile
      requires:
        - image: registry.digitalocean.com/aztlan-containers/chicmoz-base
          alias: BASE
    - image: registry.digitalocean.com/aztlan-containers/explorer-api
      context: services/explorer-api
      docker:
        dockerfile: Dockerfile
      requires:
        - image: registry.digitalocean.com/aztlan-containers/chicmoz-base
          alias: BASE
manifests:
  rawYaml:
    - k8s/production/common/namespace.yaml
    - k8s/production/explorer-ui/ingress.yaml
    - k8s/production/explorer-ui/deployment.yaml
    - k8s/production/explorer-ui/service.yaml
    - k8s/production/explorer-api/ingress.yaml
    - k8s/production/explorer-api/deployment.yaml
    - k8s/production/explorer-api/service.yaml
    - k8s/production/auth/deployment.yaml
    - k8s/production/auth/service.yaml
    - k8s/production/aztec-listener/deployment.yaml
    - k8s/production/aztec-listener/service.yaml
  helm:
    releases:
      - name: cert-manager
        remoteChart: cert-manager
        repo: https://charts.bitnami.com/bitnami
        version: 1.3.18
        namespace: cert-manager
        createNamespace: false
        recreatePods: false
        skipBuildDependencies: false
        useHelmSecrets: false
        wait: true
        setValues:
          installCRDs: true
          clusterResourceNamespace: chicmoz-prod
      - name: ingress-nginx
        remoteChart: ingress-nginx
        repo: https://kubernetes.github.io/ingress-nginx
        namespace: ingress-nginx
        createNamespace: false
        recreatePods: false
        skipBuildDependencies: false
        useHelmSecrets: false
        wait: false
        setValues:
          controller.allowSnippetAnnotations: false
          controller.config.enable-real-ip: "true"
          controller.config.proxy-add-original-uri-header: "true"
          controller.config.real-ip-header: "proxy_protocol"
          controller.config.use-forwarded-headers: "true"
          controller.config.use-proxy-protocol: "true"
          controller.config.set-real-ip-from: "0.0.0.0/0"
          controller.service.annotations.service\.beta\.kubernetes\.io/do-loadbalancer-protocol: "tcp"
          controller.service.annotations.service\.beta\.kubernetes\.io/do-loadbalancer-enable-proxy-protocol: "true"
      - name: postgresql
        version: 12.10.0
        remoteChart: postgresql
        repo: https://charts.bitnami.com/bitnami
        valuesFiles:
          - k8s/production/postgres/values.yaml
        setValues:
          global.postgresql.auth.postgresPassword: "secret-local-password" # TODO: change to env-var
          global.postgresql.auth.username: "admin"
          global.postgresql.auth.password: "secret-local-password" # TODO: change to env-var
          image.debug: true
        namespace: chicmoz-prod
        createNamespace: false
        recreatePods: false
        skipBuildDependencies: false
        useHelmSecrets: false
        wait: false
      - name: redis
        version: 18.17.1
        remoteChart: redis
        repo: https://charts.bitnami.com/bitnami
        namespace: chicmoz-prod
        createNamespace: false
        recreatePods: false
        skipBuildDependencies: false
        useHelmSecrets: false
        wait: false
        setValues:
          auth.enabled: false
      - name: kafka
        version: 26.4.2
        remoteChart: kafka
        repo: https://charts.bitnami.com/bitnami
        namespace: chicmoz-prod
        setValues:
          sasl.enabledMechanisms: plain
          sasl.controllerMechanism: plain
          sasl.interBrokerMechanism: plain
          sasl.controller.user: controller_user
          sasl.controller.password: test
          sasl.interbroker.user: inter_broker_user
          sasl.interbroker.password: test
          sasl.client.users:
            - controller_user
          sasl.client.passwords:
            - test
          extraConfig: |
            message.max.bytes=10000000
        createNamespace: false
        recreatePods: true
        skipBuildDependencies: false
        useHelmSecrets: false
        wait: false
