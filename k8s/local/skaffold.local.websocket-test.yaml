apiVersion: skaffold/v4beta6
kind: Config
metadata:
  name: chicmoz
build:
  artifacts:
    - image: chicmoz-base
      context: .
      docker:
        dockerfile: Dockerfile
    #- image: dummy-node
    #  context: services/dummy-node
    #  docker:
    #    dockerfile: Dockerfile
    #  requires:
    #    - image: chicmoz-base
    #      alias: BASE
    #- image: explorer-ui
    #  context: services/explorer-ui
    #  docker:
    #    dockerfile: Dockerfile
    #    buildArgs:
    #      NODE_ENV: "development"
    #      VITE_API_URL: "http://explorer-api.localhost:80/v1/d1e2083a-660c-4314-a6f2-1d42f4b944f4"
    #  requires:
    #    - image: chicmoz-base
    #      alias: BASE
    #- image: auth
    #  context: services/auth
    #  docker:
    #    dockerfile: Dockerfile
    #  requires:
    #    - image: chicmoz-base
    #      alias: BASE
    #- image: aztec-listener
    #  context: services/aztec-listener
    #  docker:
    #    dockerfile: Dockerfile
    #  requires:
    #    - image: chicmoz-base
    #      alias: BASE
    #- image: explorer-api
    #  context: services/explorer-api
    #  docker:
    #    dockerfile: Dockerfile
    #  requires:
    #    - image: chicmoz-base
    #      alias: BASE
    - image: websocket-event-publisher
      context: services/websocket-event-publisher
      docker:
        dockerfile: Dockerfile
      requires:
        - image: chicmoz-base
          alias: BASE
manifests:
  rawYaml:
    #    - k8s/local/common/namespace.yaml
    #    - k8s/local/explorer-ui/ingress.yaml
    #    - k8s/local/explorer-ui/deployment.yaml
    #    - k8s/local/explorer-ui/service.yaml
    - k8s/local/websocket-event-publisher/ingress.yaml
    - k8s/local/websocket-event-publisher/deployment.yaml
    - k8s/local/websocket-event-publisher/service.yaml
    #- k8s/local/explorer-api/ingress.yaml
    #- k8s/local/explorer-api/deployment.yaml
    #- k8s/local/explorer-api/service.yaml
  #    - k8s/local/auth/deployment.yaml
  #    - k8s/local/auth/service.yaml
  #    # - k8s/local/dummy-node/ingress.yaml
  #    # - k8s/local/dummy-node/deployment.yaml
  #    # - k8s/local/dummy-node/service.yaml
  #    - k8s/local/aztec-listener/deployment.yaml
  #    # - k8s/local/kafka-ui/configmap.yaml
  #    # - k8s/local/kafka-ui/configmap-env.yaml
  # - k8s/local/kafka-ui/ingress.yaml
  #
  #  -----  Aztec networks -----
  #   There are 3 different ways to run Chicmoz with Aztec locally.
  #   ‚ö†Ô∏è  whichever you choose you need to update the AZTEC_RPC_URL in k8s/local/aztec-listener/deployment.yaml
  #
  #
  #   # REMOTE DEVNET
  #   1. You use Aztec-provided RPC endpoint then you don't need any additional containers.
  #
  #
  #   # LOCAL DEVNET
  #   2. You run a local Aztec devnet node, then you also have a PXE which you can interact with and submit transactions to.
  #   üëÄ NOTE: You also need to add `127.0.0.1	aztec-sandbox-node.localhost` to your /etc/hosts file to reach it from outside the cluster
  #
  #- k8s/local/aztec-devnet-node/deployment.yaml
  #- k8s/local/aztec-devnet-node/service.yaml
  #
  #
  #   # SANDBOX
  #   3. You run a local Aztec sandbox node, then you also have a PXE which you can interact with and submit transactions to. But they are only on your local cluster.
  #   üëÄ NOTE: You also need to add `127.0.0.1	aztec-sandbox-node.localhost` to your /etc/hosts file to reach it from outside the cluster
  #
  #- k8s/local/aztec-sandbox-node/ingress.yaml
  #- k8s/local/aztec-sandbox-node/deployment.yaml
  #- k8s/local/aztec-sandbox-node/service.yaml
  #- k8s/local/anvil-ethereum-node/ingress.yaml
  #- k8s/local/anvil-ethereum-node/deployment.yaml
  #- k8s/local/anvil-ethereum-node/service.yaml
  helm:
    releases:
      - name: ingress-nginx
        remoteChart: ingress-nginx
        repo: https://kubernetes.github.io/ingress-nginx
        namespace: chicmoz
        createNamespace: false
        recreatePods: false
        skipBuildDependencies: false
        useHelmSecrets: false
        wait: false
