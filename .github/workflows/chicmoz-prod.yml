name: CI/CD Chicmoz Prod

on:
  push:
    branches:
      - production
      - feat/improve_deployment
  pull_request:
    branches:
      - production
    types:
      - closed

jobs:
  set-up:
    runs-on: ubuntu-latest
    outputs:
      tools-cache-key: ${{ steps.cache-key.outputs.key }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Print important information
        env:
          SP_TESTNET_OBSCURA_L2_RPC_1: ${{ vars.SP_TESTNET_OBSCURA_L2_RPC_1 }}
          SP_TESTNET_OBSCURA_L2_RPC_2: ${{ vars.SP_TESTNET_OBSCURA_L2_RPC_2 }}
          SP_TESTNET_AZTEC_L2_BOOTNODE_RPC: ${{ vars.SP_TESTNET_AZTEC_L2_BOOTNODE_RPC }}
          SP_TESTNET_AZTEC_L1_HTTP: ${{ vars.SP_TESTNET_AZTEC_L1_HTTP }}
          SP_TESTNET_AZTEC_L1_WS: ${{ vars.SP_TESTNET_AZTEC_L1_WS }}
          DEVNET_AZTEC_L2_BOOTNODE_RPC: ${{ vars.DEVNET_AZTEC_L2_BOOTNODE_RPC }}
          DEVNET_AZTEC_L1_HTTP: ${{ vars.DEVNET_AZTEC_L1_HTTP }}
          DEVNET_AZTEC_L1_WS: ${{ vars.DEVNET_AZTEC_L1_WS }}
        run: |
          echo "VERSION: $(git describe --tags)"
          echo "SP_TESTNET_OBSCURA_L2_RPC_1: $SP_TESTNET_OBSCURA_L2_RPC_1"
          echo "SP_TESTNET_OBSCURA_L2_RPC_2: $SP_TESTNET_OBSCURA_L2_RPC_2"
          echo "SP_TESTNET_AZTEC_L2_BOOTNODE_RPC: $SP_TESTNET_AZTEC_L2_BOOTNODE_RPC"
          echo "SP_TESTNET_AZTEC_L1_HTTP: $SP_TESTNET_AZTEC_L1_HTTP"
          echo "SP_TESTNET_AZTEC_L1_WS: $SP_TESTNET_AZTEC_L1_WS"
          echo "DEVNET_AZTEC_L2_BOOTNODE_RPC: $DEVNET_AZTEC_L2_BOOTNODE_RPC"
          echo "DEVNET_AZTEC_L1_HTTP: $DEVNET_AZTEC_L1_HTTP"
          echo "DEVNET_AZTEC_L1_WS: $DEVNET_AZTEC_L1_WS"
        shell: bash

      - name: Set up tools directory
        run: mkdir -p tools

      - name: Install Skaffold
        run: |
          curl -Lo tools/skaffold https://storage.googleapis.com/skaffold/releases/latest/skaffold-linux-amd64
          chmod +x tools/skaffold
          echo "$PWD/tools" >> $GITHUB_PATH

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Copy doctl to tools directory
        run: |
          which doctl
          cp $(which doctl) tools/
          chmod +x tools/doctl

      - name: Generate cache key
        id: cache-key
        run: |
          echo "key=${{ runner.os }}-tools-$(date '+%Y-%m-%d')" >> $GITHUB_OUTPUT

      - name: Cache tools
        uses: actions/cache@v4
        with:
          path: tools
          key: ${{ steps.cache-key.outputs.key }}

      - name: Log in to DigitalOcean Container Registry
        run: tools/doctl registry login --expiry-seconds 1200

      - name: Build application with Skaffold
        env:
          SP_TESTNET_OBSCURA_L2_RPC_1: ${{ vars.SP_TESTNET_OBSCURA_L2_RPC_1 }}
          SP_TESTNET_OBSCURA_L2_RPC_2: ${{ vars.SP_TESTNET_OBSCURA_L2_RPC_2 }}
          SP_TESTNET_AZTEC_L2_BOOTNODE_RPC: ${{ vars.SP_TESTNET_AZTEC_L2_BOOTNODE_RPC }}
          SP_TESTNET_AZTEC_L1_HTTP: ${{ vars.SP_TESTNET_AZTEC_L1_HTTP }}
          SP_TESTNET_AZTEC_L1_WS: ${{ vars.SP_TESTNET_AZTEC_L1_WS }}
          DEVNET_AZTEC_L2_BOOTNODE_RPC: ${{ vars.DEVNET_AZTEC_L2_BOOTNODE_RPC }}
          DEVNET_AZTEC_L1_HTTP: ${{ vars.DEVNET_AZTEC_L1_HTTP }}
          DEVNET_AZTEC_L1_WS: ${{ vars.DEVNET_AZTEC_L1_WS }}
        run: |
          cd k8s/production/common
          skaffold build -f ./skaffold.chicmoz-base-image.yaml --default-repo=registry.digitalocean.com/aztlan-containers
          sleep 30

  explorer-api:
    needs: set-up
    uses: ./.github/workflows/reusable-build-service.yml
    with:
      build_path: k8s/production/explorer-api/common
      skaffold_file: ./skaffold.base.yaml
      cache-key: ${{ needs.set-up.outputs.tools-cache-key }}
    secrets:
      DIGITALOCEAN_ACCESS_TOKEN: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

  explorer-ui_devnet:
    needs: set-up
    uses: ./.github/workflows/reusable-build-service.yml
    with:
      build_path: k8s/production/explorer-ui
      skaffold_file: ./skaffold.devnet.yaml
      cache-key: ${{ needs.set-up.outputs.tools-cache-key }}
    secrets:
      DIGITALOCEAN_ACCESS_TOKEN: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

  deploy:
    runs-on: ubuntu-latest
    needs:
      - set-up
      - explorer-api
      - explorer-ui_devnet

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Restore cached tools
        uses: actions/cache@v4
        with:
          path: tools
          key: ${{ needs.set-up.outputs.tools-cache-key }}
          fail-on-cache-miss: true

      - name: Add tools to PATH
        run: |
          chmod +x tools/*
          echo "$PWD/tools" >> $GITHUB_PATH

      - name: Configure doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Save DigitalOcean kubeconfig
        run: doctl kubernetes cluster kubeconfig save "chicmoz-prod"

      #- name: Log in to DigitalOcean Container Registry
      #run: doctl registry login --expiry-seconds 1200

      - name: Deploy to cluster with Skaffold
        env:
          SP_TESTNET_OBSCURA_L2_RPC_1: ${{ vars.SP_TESTNET_OBSCURA_L2_RPC_1 }}
          SP_TESTNET_OBSCURA_L2_RPC_2: ${{ vars.SP_TESTNET_OBSCURA_L2_RPC_2 }}
          SP_TESTNET_AZTEC_L2_BOOTNODE_RPC: ${{ vars.SP_TESTNET_AZTEC_L2_BOOTNODE_RPC }}
          SP_TESTNET_AZTEC_L1_HTTP: ${{ vars.SP_TESTNET_AZTEC_L1_HTTP }}
          SP_TESTNET_AZTEC_L1_WS: ${{ vars.SP_TESTNET_AZTEC_L1_WS }}
          DEVNET_AZTEC_L2_BOOTNODE_RPC: ${{ vars.DEVNET_AZTEC_L2_BOOTNODE_RPC }}
          DEVNET_AZTEC_L1_HTTP: ${{ vars.DEVNET_AZTEC_L1_HTTP }}
          DEVNET_AZTEC_L1_WS: ${{ vars.DEVNET_AZTEC_L1_WS }}
        run: |
          MAX_RETRIES=3
          RETRY_DELAY=10

          kubectl create secret generic global \
            --from-literal=SP_TESTNET_OBSCURA_L2_RPC_1=$SP_TESTNET_OBSCURA_L2_RPC_1 \
            --from-literal=SP_TESTNET_OBSCURA_L2_RPC_2=$SP_TESTNET_OBSCURA_L2_RPC_2 \
            --from-literal=SP_TESTNET_AZTEC_L2_BOOTNODE_RPC=$SP_TESTNET_AZTEC_L2_BOOTNODE_RPC \
            --from-literal=SP_TESTNET_AZTEC_L1_HTTP=$SP_TESTNET_AZTEC_L1_HTTP \
            --from-literal=SP_TESTNET_AZTEC_L1_WS=$SP_TESTNET_AZTEC_L1_WS \
            --from-literal=DEVNET_AZTEC_L2_BOOTNODE_RPC=$DEVNET_AZTEC_L2_BOOTNODE_RPC \
            --from-literal=DEVNET_AZTEC_L1_HTTP=$DEVNET_AZTEC_L1_HTTP \
            --from-literal=DEVNET_AZTEC_L1_WS=$DEVNET_AZTEC_L1_WS \
            -n chicmoz-prod --dry-run=client -o yaml | kubectl apply -f -

          for i in $(seq 1 $MAX_RETRIES); do
            if bash -x scripts/production/deploy.sh; then
              echo "Deployment successful"
              exit 0
            fi
            echo "Attempt $i failed. Retrying in $RETRY_DELAY seconds..."
            sleep $RETRY_DELAY
          done

          echo "Deployment failed after $MAX_RETRIES attempts"
          exit 1
